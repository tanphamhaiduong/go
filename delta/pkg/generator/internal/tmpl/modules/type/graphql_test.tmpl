{{- $Name := .Module.Name }}
{{- $name := .Module.Name | ToLowerCase }}
package {{ $name }}

import (
	"testing"

	"github.com/stretchr/testify/suite"
	"github.com/tanphamhaiduong/go/common/logger"
	mocksDB "github.com/tanphamhaiduong/go/delta/internal/database/mocks"
	"github.com/tanphamhaiduong/go/delta/internal/modules/{{ $name }}/mocks"
)

type {{ $Name }}ResolverTestSuite struct {
	suite.Suite
	MockI{{ $Name }}    *mocks.IHandler
	{{ $Name }}                ResolverImpl
}

func Test{{ $Name }}ResolverTestSuite(t *testing.T) {
	suite.Run(t, new({{ $Name }}ResolverTestSuite))
}

func (s *{{ $Name }}ResolverTestSuite) SetupTest() {
	s.MockI{{ $Name }} = &mocks.IHandler{}
	resolver := NewResolver(s.MockI{{ $Name }})
	s.{{ $Name }} = *resolver
	s.{{ $Name }}.{{ $name }} = s.MockI{{ $Name }}
	logConfig := logger.Configuration{}
	logger.NewLogger(logConfig, logger.InstanceZapLogger)
}
