// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package pb

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Company struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status               string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	CreatedBy            string   `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedBy            string   `protobuf:"bytes,5,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Company) Reset()         { *m = Company{} }
func (m *Company) String() string { return proto.CompactTextString(m) }
func (*Company) ProtoMessage()    {}
func (*Company) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *Company) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Company.Unmarshal(m, b)
}
func (m *Company) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Company.Marshal(b, m, deterministic)
}
func (m *Company) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Company.Merge(m, src)
}
func (m *Company) XXX_Size() int {
	return xxx_messageInfo_Company.Size(m)
}
func (m *Company) XXX_DiscardUnknown() {
	xxx_messageInfo_Company.DiscardUnknown(m)
}

var xxx_messageInfo_Company proto.InternalMessageInfo

func (m *Company) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Company) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Company) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Company) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Company) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

// List
type CompanyListRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status               string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	CreatedBy            string   `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedBy            string   `protobuf:"bytes,5,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	Page                 int64    `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int64    `protobuf:"varint,7,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompanyListRequest) Reset()         { *m = CompanyListRequest{} }
func (m *CompanyListRequest) String() string { return proto.CompactTextString(m) }
func (*CompanyListRequest) ProtoMessage()    {}
func (*CompanyListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *CompanyListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyListRequest.Unmarshal(m, b)
}
func (m *CompanyListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyListRequest.Marshal(b, m, deterministic)
}
func (m *CompanyListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyListRequest.Merge(m, src)
}
func (m *CompanyListRequest) XXX_Size() int {
	return xxx_messageInfo_CompanyListRequest.Size(m)
}
func (m *CompanyListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyListRequest proto.InternalMessageInfo

func (m *CompanyListRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CompanyListRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CompanyListRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CompanyListRequest) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *CompanyListRequest) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

func (m *CompanyListRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *CompanyListRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type CompanyListResponse struct {
	Company              []*Company `protobuf:"bytes,1,rep,name=company,proto3" json:"company,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CompanyListResponse) Reset()         { *m = CompanyListResponse{} }
func (m *CompanyListResponse) String() string { return proto.CompactTextString(m) }
func (*CompanyListResponse) ProtoMessage()    {}
func (*CompanyListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}

func (m *CompanyListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyListResponse.Unmarshal(m, b)
}
func (m *CompanyListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyListResponse.Marshal(b, m, deterministic)
}
func (m *CompanyListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyListResponse.Merge(m, src)
}
func (m *CompanyListResponse) XXX_Size() int {
	return xxx_messageInfo_CompanyListResponse.Size(m)
}
func (m *CompanyListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyListResponse proto.InternalMessageInfo

func (m *CompanyListResponse) GetCompany() []*Company {
	if m != nil {
		return m.Company
	}
	return nil
}

// GetByID
type CompanyGetByIDRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompanyGetByIDRequest) Reset()         { *m = CompanyGetByIDRequest{} }
func (m *CompanyGetByIDRequest) String() string { return proto.CompactTextString(m) }
func (*CompanyGetByIDRequest) ProtoMessage()    {}
func (*CompanyGetByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{3}
}

func (m *CompanyGetByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyGetByIDRequest.Unmarshal(m, b)
}
func (m *CompanyGetByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyGetByIDRequest.Marshal(b, m, deterministic)
}
func (m *CompanyGetByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyGetByIDRequest.Merge(m, src)
}
func (m *CompanyGetByIDRequest) XXX_Size() int {
	return xxx_messageInfo_CompanyGetByIDRequest.Size(m)
}
func (m *CompanyGetByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyGetByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyGetByIDRequest proto.InternalMessageInfo

func (m *CompanyGetByIDRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CompanyGetByIDResponse struct {
	Company              *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompanyGetByIDResponse) Reset()         { *m = CompanyGetByIDResponse{} }
func (m *CompanyGetByIDResponse) String() string { return proto.CompactTextString(m) }
func (*CompanyGetByIDResponse) ProtoMessage()    {}
func (*CompanyGetByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{4}
}

func (m *CompanyGetByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyGetByIDResponse.Unmarshal(m, b)
}
func (m *CompanyGetByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyGetByIDResponse.Marshal(b, m, deterministic)
}
func (m *CompanyGetByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyGetByIDResponse.Merge(m, src)
}
func (m *CompanyGetByIDResponse) XXX_Size() int {
	return xxx_messageInfo_CompanyGetByIDResponse.Size(m)
}
func (m *CompanyGetByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyGetByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyGetByIDResponse proto.InternalMessageInfo

func (m *CompanyGetByIDResponse) GetCompany() *Company {
	if m != nil {
		return m.Company
	}
	return nil
}

// GetByIDs
type CompanyGetByIDsRequest struct {
	Ids                  []int64  `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompanyGetByIDsRequest) Reset()         { *m = CompanyGetByIDsRequest{} }
func (m *CompanyGetByIDsRequest) String() string { return proto.CompactTextString(m) }
func (*CompanyGetByIDsRequest) ProtoMessage()    {}
func (*CompanyGetByIDsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{5}
}

func (m *CompanyGetByIDsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyGetByIDsRequest.Unmarshal(m, b)
}
func (m *CompanyGetByIDsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyGetByIDsRequest.Marshal(b, m, deterministic)
}
func (m *CompanyGetByIDsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyGetByIDsRequest.Merge(m, src)
}
func (m *CompanyGetByIDsRequest) XXX_Size() int {
	return xxx_messageInfo_CompanyGetByIDsRequest.Size(m)
}
func (m *CompanyGetByIDsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyGetByIDsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyGetByIDsRequest proto.InternalMessageInfo

func (m *CompanyGetByIDsRequest) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type CompanyGetByIDsResponse struct {
	Company              []*Company `protobuf:"bytes,1,rep,name=company,proto3" json:"company,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CompanyGetByIDsResponse) Reset()         { *m = CompanyGetByIDsResponse{} }
func (m *CompanyGetByIDsResponse) String() string { return proto.CompactTextString(m) }
func (*CompanyGetByIDsResponse) ProtoMessage()    {}
func (*CompanyGetByIDsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{6}
}

func (m *CompanyGetByIDsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyGetByIDsResponse.Unmarshal(m, b)
}
func (m *CompanyGetByIDsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyGetByIDsResponse.Marshal(b, m, deterministic)
}
func (m *CompanyGetByIDsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyGetByIDsResponse.Merge(m, src)
}
func (m *CompanyGetByIDsResponse) XXX_Size() int {
	return xxx_messageInfo_CompanyGetByIDsResponse.Size(m)
}
func (m *CompanyGetByIDsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyGetByIDsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyGetByIDsResponse proto.InternalMessageInfo

func (m *CompanyGetByIDsResponse) GetCompany() []*Company {
	if m != nil {
		return m.Company
	}
	return nil
}

// Insert
type CompanyInsertRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	CreatedBy            string   `protobuf:"bytes,3,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedBy            string   `protobuf:"bytes,4,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompanyInsertRequest) Reset()         { *m = CompanyInsertRequest{} }
func (m *CompanyInsertRequest) String() string { return proto.CompactTextString(m) }
func (*CompanyInsertRequest) ProtoMessage()    {}
func (*CompanyInsertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{7}
}

func (m *CompanyInsertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyInsertRequest.Unmarshal(m, b)
}
func (m *CompanyInsertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyInsertRequest.Marshal(b, m, deterministic)
}
func (m *CompanyInsertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyInsertRequest.Merge(m, src)
}
func (m *CompanyInsertRequest) XXX_Size() int {
	return xxx_messageInfo_CompanyInsertRequest.Size(m)
}
func (m *CompanyInsertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyInsertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyInsertRequest proto.InternalMessageInfo

func (m *CompanyInsertRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CompanyInsertRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CompanyInsertRequest) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *CompanyInsertRequest) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type CompanyInsertResponse struct {
	Company              *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompanyInsertResponse) Reset()         { *m = CompanyInsertResponse{} }
func (m *CompanyInsertResponse) String() string { return proto.CompactTextString(m) }
func (*CompanyInsertResponse) ProtoMessage()    {}
func (*CompanyInsertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{8}
}

func (m *CompanyInsertResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyInsertResponse.Unmarshal(m, b)
}
func (m *CompanyInsertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyInsertResponse.Marshal(b, m, deterministic)
}
func (m *CompanyInsertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyInsertResponse.Merge(m, src)
}
func (m *CompanyInsertResponse) XXX_Size() int {
	return xxx_messageInfo_CompanyInsertResponse.Size(m)
}
func (m *CompanyInsertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyInsertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyInsertResponse proto.InternalMessageInfo

func (m *CompanyInsertResponse) GetCompany() *Company {
	if m != nil {
		return m.Company
	}
	return nil
}

type CompanyUpdateRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	CreatedBy            string   `protobuf:"bytes,3,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedBy            string   `protobuf:"bytes,4,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompanyUpdateRequest) Reset()         { *m = CompanyUpdateRequest{} }
func (m *CompanyUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*CompanyUpdateRequest) ProtoMessage()    {}
func (*CompanyUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{9}
}

func (m *CompanyUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyUpdateRequest.Unmarshal(m, b)
}
func (m *CompanyUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyUpdateRequest.Marshal(b, m, deterministic)
}
func (m *CompanyUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyUpdateRequest.Merge(m, src)
}
func (m *CompanyUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_CompanyUpdateRequest.Size(m)
}
func (m *CompanyUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyUpdateRequest proto.InternalMessageInfo

func (m *CompanyUpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CompanyUpdateRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CompanyUpdateRequest) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *CompanyUpdateRequest) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type CompanyUpdateResponse struct {
	Company              *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompanyUpdateResponse) Reset()         { *m = CompanyUpdateResponse{} }
func (m *CompanyUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*CompanyUpdateResponse) ProtoMessage()    {}
func (*CompanyUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{10}
}

func (m *CompanyUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyUpdateResponse.Unmarshal(m, b)
}
func (m *CompanyUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyUpdateResponse.Marshal(b, m, deterministic)
}
func (m *CompanyUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyUpdateResponse.Merge(m, src)
}
func (m *CompanyUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_CompanyUpdateResponse.Size(m)
}
func (m *CompanyUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyUpdateResponse proto.InternalMessageInfo

func (m *CompanyUpdateResponse) GetCompany() *Company {
	if m != nil {
		return m.Company
	}
	return nil
}

type CompanyDeleteRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompanyDeleteRequest) Reset()         { *m = CompanyDeleteRequest{} }
func (m *CompanyDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*CompanyDeleteRequest) ProtoMessage()    {}
func (*CompanyDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{11}
}

func (m *CompanyDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyDeleteRequest.Unmarshal(m, b)
}
func (m *CompanyDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyDeleteRequest.Marshal(b, m, deterministic)
}
func (m *CompanyDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyDeleteRequest.Merge(m, src)
}
func (m *CompanyDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_CompanyDeleteRequest.Size(m)
}
func (m *CompanyDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyDeleteRequest proto.InternalMessageInfo

func (m *CompanyDeleteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CompanyDeleteResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompanyDeleteResponse) Reset()         { *m = CompanyDeleteResponse{} }
func (m *CompanyDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*CompanyDeleteResponse) ProtoMessage()    {}
func (*CompanyDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{12}
}

func (m *CompanyDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompanyDeleteResponse.Unmarshal(m, b)
}
func (m *CompanyDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompanyDeleteResponse.Marshal(b, m, deterministic)
}
func (m *CompanyDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyDeleteResponse.Merge(m, src)
}
func (m *CompanyDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_CompanyDeleteResponse.Size(m)
}
func (m *CompanyDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyDeleteResponse proto.InternalMessageInfo

func (m *CompanyDeleteResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Company)(nil), "Company")
	proto.RegisterType((*CompanyListRequest)(nil), "CompanyListRequest")
	proto.RegisterType((*CompanyListResponse)(nil), "CompanyListResponse")
	proto.RegisterType((*CompanyGetByIDRequest)(nil), "CompanyGetByIDRequest")
	proto.RegisterType((*CompanyGetByIDResponse)(nil), "CompanyGetByIDResponse")
	proto.RegisterType((*CompanyGetByIDsRequest)(nil), "CompanyGetByIDsRequest")
	proto.RegisterType((*CompanyGetByIDsResponse)(nil), "CompanyGetByIDsResponse")
	proto.RegisterType((*CompanyInsertRequest)(nil), "CompanyInsertRequest")
	proto.RegisterType((*CompanyInsertResponse)(nil), "CompanyInsertResponse")
	proto.RegisterType((*CompanyUpdateRequest)(nil), "CompanyUpdateRequest")
	proto.RegisterType((*CompanyUpdateResponse)(nil), "CompanyUpdateResponse")
	proto.RegisterType((*CompanyDeleteRequest)(nil), "CompanyDeleteRequest")
	proto.RegisterType((*CompanyDeleteResponse)(nil), "CompanyDeleteResponse")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x95, 0x93, 0xd0, 0xee, 0xce, 0xb2, 0x0b, 0xf2, 0xee, 0x66, 0xad, 0x88, 0x43, 0x95, 0x03,
	0x54, 0x1c, 0x7c, 0x58, 0x2e, 0x20, 0x3e, 0x24, 0x4a, 0x24, 0x54, 0x89, 0x53, 0x2a, 0x2e, 0xdc,
	0xd2, 0x66, 0x54, 0x45, 0x6a, 0x93, 0x10, 0xbb, 0x48, 0xe5, 0x80, 0xc4, 0x4f, 0xe0, 0xff, 0xf0,
	0xe3, 0x50, 0x9c, 0x0f, 0x13, 0x37, 0x59, 0xa9, 0xa7, 0x9e, 0x6a, 0xcf, 0xcc, 0xeb, 0x7b, 0xf6,
	0x7b, 0x0e, 0x5c, 0x6e, 0x51, 0x88, 0x68, 0x8d, 0x3c, 0x2f, 0x32, 0x99, 0xf9, 0xbf, 0x09, 0x8c,
	0x3f, 0x65, 0xdb, 0x3c, 0x4a, 0xf7, 0xf4, 0x0a, 0xac, 0x24, 0x66, 0x64, 0x42, 0xa6, 0x76, 0x68,
	0x25, 0x31, 0xa5, 0xe0, 0xa4, 0xd1, 0x16, 0x99, 0x35, 0x21, 0xd3, 0xf3, 0x50, 0xad, 0xa9, 0x0b,
	0x23, 0x21, 0x23, 0xb9, 0x13, 0xcc, 0x56, 0xd5, 0x7a, 0x47, 0x9f, 0xc1, 0xf9, 0xaa, 0xc0, 0x48,
	0x62, 0x3c, 0xdb, 0x33, 0x47, 0xb5, 0x74, 0xa1, 0xec, 0xee, 0xf2, 0xb8, 0xee, 0x3e, 0xaa, 0xba,
	0x6d, 0xc1, 0xff, 0x4b, 0x80, 0xd6, 0x1a, 0xbe, 0x24, 0x42, 0x86, 0xf8, 0x7d, 0x87, 0x42, 0x9e,
	0x4a, 0x4e, 0xc9, 0x93, 0x47, 0x6b, 0x64, 0x23, 0xc5, 0xac, 0xd6, 0xd4, 0x83, 0xb3, 0xf2, 0x77,
	0x91, 0xfc, 0x44, 0x36, 0x56, 0xf5, 0x76, 0xef, 0xbf, 0x81, 0xeb, 0x8e, 0x7a, 0x91, 0x67, 0xa9,
	0x40, 0xea, 0xc3, 0x78, 0x55, 0x95, 0x19, 0x99, 0xd8, 0xd3, 0x8b, 0xfb, 0x33, 0x5e, 0x8f, 0x85,
	0x4d, 0xc3, 0x7f, 0x01, 0xb7, 0x75, 0xed, 0x33, 0xca, 0xd9, 0x7e, 0x1e, 0x0c, 0x9c, 0xdd, 0x7f,
	0x07, 0xae, 0x39, 0xd8, 0x47, 0x43, 0xfa, 0x69, 0x5e, 0x9a, 0x68, 0xd1, 0xf0, 0x3c, 0x05, 0x3b,
	0x89, 0x85, 0x12, 0x68, 0x87, 0xe5, 0xd2, 0x7f, 0x0f, 0x77, 0x07, 0xb3, 0x47, 0x9c, 0xe8, 0x17,
	0xdc, 0xd4, 0xb5, 0x79, 0x2a, 0xb0, 0x68, 0xcd, 0x6c, 0xcc, 0x23, 0xbd, 0xe6, 0x59, 0xc3, 0xe6,
	0xd9, 0x0f, 0x9a, 0xe7, 0x98, 0x59, 0x7a, 0xdb, 0xde, 0x68, 0xc3, 0x7f, 0xc4, 0x3d, 0x69, 0xf1,
	0x5f, 0xd5, 0x1f, 0x9e, 0x4e, 0x7c, 0xc3, 0x7f, 0x84, 0xf8, 0xe7, 0xad, 0xf8, 0x00, 0x37, 0xa8,
	0xc5, 0x9b, 0x51, 0xd2, 0x99, 0x6b, 0xe6, 0x6a, 0x12, 0x63, 0xf0, 0xfe, 0x8f, 0x0d, 0x8f, 0x03,
	0xdc, 0xc8, 0x68, 0x81, 0xc5, 0x8f, 0x64, 0x85, 0xf4, 0x35, 0x5c, 0xfc, 0x17, 0x74, 0x7a, 0xcd,
	0x0f, 0x1f, 0xad, 0x77, 0xc3, 0xfb, 0xde, 0xc2, 0x47, 0xb8, 0xea, 0x86, 0x8a, 0xba, 0xbc, 0x37,
	0xf8, 0xde, 0x1d, 0x1f, 0xc8, 0x79, 0x00, 0x4f, 0x8c, 0x5c, 0x52, 0x73, 0xb6, 0x49, 0xb5, 0xc7,
	0xf8, 0x50, 0x84, 0x3f, 0xc0, 0x65, 0x27, 0x1e, 0xf4, 0x96, 0xf7, 0xc5, 0xd5, 0x73, 0x79, 0x7f,
	0x8a, 0x34, 0xbe, 0x72, 0x48, 0xe3, 0x3b, 0x89, 0xd1, 0x78, 0xc3, 0x48, 0x8d, 0xaf, 0x2e, 0x5f,
	0xe3, 0x3b, 0xa6, 0x69, 0x7c, 0xd7, 0xa3, 0x99, 0xf3, 0xcd, 0xca, 0x97, 0xcb, 0x91, 0xfa, 0x76,
	0xbf, 0xfa, 0x17, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x85, 0x70, 0xbd, 0xcc, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeltaServiceClient is the client API for DeltaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeltaServiceClient interface {
	CompanyList(ctx context.Context, in *CompanyListRequest, opts ...grpc.CallOption) (*CompanyListResponse, error)
	CompanyGetByID(ctx context.Context, in *CompanyGetByIDRequest, opts ...grpc.CallOption) (*CompanyGetByIDResponse, error)
	CompanyGetByIDs(ctx context.Context, in *CompanyGetByIDsRequest, opts ...grpc.CallOption) (*CompanyGetByIDsResponse, error)
	CompanyInsert(ctx context.Context, in *CompanyInsertRequest, opts ...grpc.CallOption) (*CompanyInsertResponse, error)
	CompanyUpdate(ctx context.Context, in *CompanyUpdateRequest, opts ...grpc.CallOption) (*CompanyUpdateResponse, error)
	CompanyDelete(ctx context.Context, in *CompanyDeleteRequest, opts ...grpc.CallOption) (*CompanyDeleteResponse, error)
}

type deltaServiceClient struct {
	cc *grpc.ClientConn
}

func NewDeltaServiceClient(cc *grpc.ClientConn) DeltaServiceClient {
	return &deltaServiceClient{cc}
}

func (c *deltaServiceClient) CompanyList(ctx context.Context, in *CompanyListRequest, opts ...grpc.CallOption) (*CompanyListResponse, error) {
	out := new(CompanyListResponse)
	err := c.cc.Invoke(ctx, "/DeltaService/CompanyList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deltaServiceClient) CompanyGetByID(ctx context.Context, in *CompanyGetByIDRequest, opts ...grpc.CallOption) (*CompanyGetByIDResponse, error) {
	out := new(CompanyGetByIDResponse)
	err := c.cc.Invoke(ctx, "/DeltaService/CompanyGetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deltaServiceClient) CompanyGetByIDs(ctx context.Context, in *CompanyGetByIDsRequest, opts ...grpc.CallOption) (*CompanyGetByIDsResponse, error) {
	out := new(CompanyGetByIDsResponse)
	err := c.cc.Invoke(ctx, "/DeltaService/CompanyGetByIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deltaServiceClient) CompanyInsert(ctx context.Context, in *CompanyInsertRequest, opts ...grpc.CallOption) (*CompanyInsertResponse, error) {
	out := new(CompanyInsertResponse)
	err := c.cc.Invoke(ctx, "/DeltaService/CompanyInsert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deltaServiceClient) CompanyUpdate(ctx context.Context, in *CompanyUpdateRequest, opts ...grpc.CallOption) (*CompanyUpdateResponse, error) {
	out := new(CompanyUpdateResponse)
	err := c.cc.Invoke(ctx, "/DeltaService/CompanyUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deltaServiceClient) CompanyDelete(ctx context.Context, in *CompanyDeleteRequest, opts ...grpc.CallOption) (*CompanyDeleteResponse, error) {
	out := new(CompanyDeleteResponse)
	err := c.cc.Invoke(ctx, "/DeltaService/CompanyDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeltaServiceServer is the server API for DeltaService service.
type DeltaServiceServer interface {
	CompanyList(context.Context, *CompanyListRequest) (*CompanyListResponse, error)
	CompanyGetByID(context.Context, *CompanyGetByIDRequest) (*CompanyGetByIDResponse, error)
	CompanyGetByIDs(context.Context, *CompanyGetByIDsRequest) (*CompanyGetByIDsResponse, error)
	CompanyInsert(context.Context, *CompanyInsertRequest) (*CompanyInsertResponse, error)
	CompanyUpdate(context.Context, *CompanyUpdateRequest) (*CompanyUpdateResponse, error)
	CompanyDelete(context.Context, *CompanyDeleteRequest) (*CompanyDeleteResponse, error)
}

// UnimplementedDeltaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeltaServiceServer struct {
}

func (*UnimplementedDeltaServiceServer) CompanyList(ctx context.Context, req *CompanyListRequest) (*CompanyListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompanyList not implemented")
}
func (*UnimplementedDeltaServiceServer) CompanyGetByID(ctx context.Context, req *CompanyGetByIDRequest) (*CompanyGetByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompanyGetByID not implemented")
}
func (*UnimplementedDeltaServiceServer) CompanyGetByIDs(ctx context.Context, req *CompanyGetByIDsRequest) (*CompanyGetByIDsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompanyGetByIDs not implemented")
}
func (*UnimplementedDeltaServiceServer) CompanyInsert(ctx context.Context, req *CompanyInsertRequest) (*CompanyInsertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompanyInsert not implemented")
}
func (*UnimplementedDeltaServiceServer) CompanyUpdate(ctx context.Context, req *CompanyUpdateRequest) (*CompanyUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompanyUpdate not implemented")
}
func (*UnimplementedDeltaServiceServer) CompanyDelete(ctx context.Context, req *CompanyDeleteRequest) (*CompanyDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompanyDelete not implemented")
}

func RegisterDeltaServiceServer(s *grpc.Server, srv DeltaServiceServer) {
	s.RegisterService(&_DeltaService_serviceDesc, srv)
}

func _DeltaService_CompanyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompanyListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeltaServiceServer).CompanyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeltaService/CompanyList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeltaServiceServer).CompanyList(ctx, req.(*CompanyListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeltaService_CompanyGetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompanyGetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeltaServiceServer).CompanyGetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeltaService/CompanyGetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeltaServiceServer).CompanyGetByID(ctx, req.(*CompanyGetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeltaService_CompanyGetByIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompanyGetByIDsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeltaServiceServer).CompanyGetByIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeltaService/CompanyGetByIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeltaServiceServer).CompanyGetByIDs(ctx, req.(*CompanyGetByIDsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeltaService_CompanyInsert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompanyInsertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeltaServiceServer).CompanyInsert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeltaService/CompanyInsert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeltaServiceServer).CompanyInsert(ctx, req.(*CompanyInsertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeltaService_CompanyUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompanyUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeltaServiceServer).CompanyUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeltaService/CompanyUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeltaServiceServer).CompanyUpdate(ctx, req.(*CompanyUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeltaService_CompanyDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompanyDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeltaServiceServer).CompanyDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeltaService/CompanyDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeltaServiceServer).CompanyDelete(ctx, req.(*CompanyDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeltaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DeltaService",
	HandlerType: (*DeltaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CompanyList",
			Handler:    _DeltaService_CompanyList_Handler,
		},
		{
			MethodName: "CompanyGetByID",
			Handler:    _DeltaService_CompanyGetByID_Handler,
		},
		{
			MethodName: "CompanyGetByIDs",
			Handler:    _DeltaService_CompanyGetByIDs_Handler,
		},
		{
			MethodName: "CompanyInsert",
			Handler:    _DeltaService_CompanyInsert_Handler,
		},
		{
			MethodName: "CompanyUpdate",
			Handler:    _DeltaService_CompanyUpdate_Handler,
		},
		{
			MethodName: "CompanyDelete",
			Handler:    _DeltaService_CompanyDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}
